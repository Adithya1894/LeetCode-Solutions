Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note: The solution set must not contain duplicate triplets.

For example, given array S = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]


## Simple O(n3) solution ## this is just for demonstration purpose. done use this.

class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
       
       //Creating a new List of List
        List<List<Integer>> listOfLists = new LinkedList<>();
        //Sorting the array.
          Arrays.sort(nums);
        
        //Looping three times for traversing all the possible combinations in the array
        for(int i = 0; i < nums.length-2; i++){
            for(int j = i+1; j<nums.length-1; j++){
                for(int k = j+1; k<nums.length; k++){
                //checking if the triplet adds to zero
                    if(nums[i]+nums[j]+nums[k] == 0){
                        //if it adds to zero and if the list doesnt contain this triplet already then add it into the list of list
                        if(!listOfLists.contains(Arrays.asList(nums[i], nums[j], nums[k])))
                            listOfLists.add(Arrays.asList(nums[i], nums[j], nums[k]));
    
                    }
                }
            }       
        }
        //return the list of list. 
        return listOfLists;
    }
}


## A better solution using Hashing, but still gonnna be quadratic solution. 
